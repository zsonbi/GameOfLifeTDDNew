name: .NET Unit Tests

on:
  push:
    branches:
      - master
      - ci/cd
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: '8.0.x' # Adjust to your project's .NET version

      - name: "Restore/Build/Test"
        run: dotnet test --configuration Release --verbosity normal --logger trx --collect:"XPlat Code Coverage"
      - name: Combine Coverage Reports # This is because one report is produced per project, and we want one result for all of them.
        uses: danielpalme/ReportGenerator-GitHub-Action@5.2.4
        with:
          reports: "**/*.cobertura.xml" # REQUIRED # The coverage reports that should be parsed (separated by semicolon). Globbing is supported.
          targetdir: "${{ github.workspace }}" # REQUIRED # The directory where the generated report should be saved.
          reporttypes: "Cobertura" # The output formats and scope (separated by semicolon) Values: Badges, Clover, Cobertura, CsvSummary, Html, Html_Dark, Html_Light, Html_BlueRed, HtmlChart, HtmlInline, HtmlInline_AzurePipelines, HtmlInline_AzurePipelines_Dark, HtmlInline_AzurePipelines_Light, HtmlSummary, JsonSummary, Latex, LatexSummary, lcov, MarkdownSummary, MarkdownSummaryGithub, MarkdownDeltaSummary, MHtml, PngChart, SonarQube, TeamCitySummary, TextSummary, TextDeltaSummary, Xml, XmlSummary
          verbosity: "Info" # The verbosity level of the log messages. Values: Verbose, Info, Warning, Error, Off
          title: "Code Coverage" # Optional title.
          tag: "${{ github.run_number }}_${{ github.run_id }}" # Optional tag or build version.
          customSettings: "" # Optional custom settings (separated by semicolon). See: https://github.com/danielpalme/ReportGenerator/wiki/Settings.
          toolpath: "reportgeneratortool" # Default directory for installing the dotnet tool.
      - name: Upload Combined Coverage XML
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: ${{ github.workspace }}/Cobertura.xml
          retention-days: 5

      - name: Publish Code Coverage Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: "Cobertura.xml"
          badge: true
          fail_below_min: false # just informative for now
          format: markdown
          hide_branch_rate: false
          hide_complexity: false
          indicators: true
          output: both
          thresholds: "10 30"

      # Install ReportGenerator tool
      - name: Install ReportGenerator
        run: |
          dotnet tool install --global dotnet-reportgenerator-globaltool
          echo "$(dotnet --list-sdks)"
      
      # Generate HTML report from the TRX report
      - name: Generate HTML coverage report
        run: |
          reportgenerator "-reports:**/*.cobertura.xml" "-targetdir:coverage-report" -reporttypes:Html
      
      # Upload HTML report as an artifact
      - name: Upload coverage report as artifact
        uses: actions/upload-artifact@v4.3.3
        with:
          name: code-coverage-report
          path: coverage-report/index.html
